    class GroceryStore:
    def __init__(self):
        #Initialize the grocery store with some products
        self.products = {
            "Apple": {"price": 1.2, "stock": 50},
            "Banana": {"price": 0.5, "stock": 100},
            "Milk": {"price": 2.0, "stock": 30},
            "Bread": {"price": 1.5, "stock": 20}
        }
        self.total_sales = 0.0  # Keeps track of total sales

    def display_products(self):
        #Display available products with their prices and stock
        print("\nAvailable Products:")
        print("=" * 30)
        for product, info in self.products.items():
            print(f"{product} - ${info['price']:.2f} - Stock: {info['stock']} units")
        print("=" * 30)

    def add_product(self):
        #Add a new product to the store
        product_name = input("Enter product name: ").title()
        if product_name in self.products:
            print("Product already exists! Use update stock instead.")
            return

        try:
            price = float(input("Enter product price: $"))
            stock = int(input("Enter initial stock: "))
            if price < 0 or stock < 0:
                print("Price and stock must be positive values.")
                return

            self.products[product_name] = {"price": price, "stock": stock}
            print(f"{product_name} added successfully!")
        except ValueError:
            print("Invalid input! Please enter numeric values.")

    def update_stock(self):
        #Update stock of an existing product
        product_name = input("Enter product name to update stock: ").title()
        if product_name not in self.products:
            print("Product not found!")
            return

        try:
            stock = int(input("Enter stock to add: "))
            if stock < 0:
                print("Stock must be a positive value.")
                return

            self.products[product_name]["stock"] += stock
            print(f"Stock updated! {product_name} now has {self.products[product_name]['stock']} units.")
        except ValueError:
            print("Invalid input! Please enter a numeric value.")

    def sell_product(self):
        #Sell a product and update stock and total sales.
        product_name = input("Enter product name to sell: ").title()
        if product_name not in self.products:
            print("Product not found!")
            return

        try:
            quantity = int(input(f"Enter quantity of {product_name} to sell: "))
            if quantity <= 0:
                print("Quantity must be a positive value.")
                return
            if quantity > self.products[product_name]["stock"]:
                print("Not enough stock available!")
                return

            self.products[product_name]["stock"] -= quantity
            sale_amount = quantity * self.products[product_name]["price"]
            self.total_sales += sale_amount
            print(f"Sold {quantity} {product_name}(s) for ${sale_amount:.2f}")
        except ValueError:
            print("Invalid input! Please enter a numeric value.")

    def display_total_sales(self):
        #Display the total sales made by the store
        print(f"\nTotal Sales: ${self.total_sales:.2f}")

    def run(self):
        #Main loop to run the Grocery Store Management System
        while True:
            print("\nGrocery Store Management System")
            print("=" * 30)
            print("1. View Products")
            print("2. Add Product")
            print("3. Update Stock")
            print("4. Sell Product")
            print("5. View Total Sales")
            print("6. Exit")
            choice = input("Enter your choice (1-6): ")

            if choice == '1':
                self.display_products()
            elif choice == '2':
                self.add_product()
            elif choice == '3':
                self.update_stock()
            elif choice == '4':
                self.sell_product()
            elif choice == '5':
                self.display_total_sales()
            elif choice == '6':
                print("Exiting... Thank you for using the Grocery Store Management System!")
                break
            else:
                print("Invalid choice! Please select a valid option.")

# Run the program
if __name__ == "__main__":
    store = GroceryStore()
    store.run()
